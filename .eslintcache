[{"C:\\Users\\User\\demonworld_ui\\src\\index.js":"1","C:\\Users\\User\\demonworld_ui\\src\\App.js":"2","C:\\Users\\User\\demonworld_ui\\src\\reportWebVitals.js":"3","C:\\Users\\User\\demonworld_ui\\src\\services\\factionService.js":"4","C:\\Users\\User\\demonworld_ui\\src\\constants\\unitTypes.js":"5","C:\\Users\\User\\demonworld_ui\\src\\constants\\factions.js":"6","C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\depencies\\factionTableFunctions.js":"7","C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\sharedFunctions.js":"8","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ListGeneratorController.js":"9","C:\\Users\\User\\demonworld_ui\\src\\constants\\operators.js":"10","C:\\Users\\User\\demonworld_ui\\src\\constants\\numericConstants.js":"11","C:\\Users\\User\\demonworld_ui\\src\\theme.js":"12","C:\\Users\\User\\demonworld_ui\\src\\components\\landingPage\\landingPage.js":"13","C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\selectionInput.js":"14","C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\factionTable.js":"15","C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\factionTableRow.js":"16","C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\toggleColumnsMenu.js":"17","C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\detailedCardView.js":"18","C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\factionTableHeader.js":"19","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\useRuleValidation.js":"20","C:\\Users\\User\\demonworld_ui\\src\\contexts\\armyContext.js":"21","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\armyListDisplay.js":"22","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\darkElves.js":"23","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\dwarfs.js":"24","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\empireRules.js":"25","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\orkRules.js":"26","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\highElfsRules.js":"27","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\thainRules.js":"28","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\ishtakRules.js":"29","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\norwingerRules.js":"30","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\goblinRules.js":"31","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\globalRules\\globalRules.js":"32","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\undeadRules.js":"33","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ItemShop\\ItemShop.js":"34","C:\\Users\\User\\demonworld_ui\\src\\services\\itemService.js":"35","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\globalRules\\ruleObjectProvider.js":"36","C:\\Users\\User\\demonworld_ui\\src\\constants\\allies.js":"37","C:\\Users\\User\\demonworld_ui\\src\\constants\\itemShopConstants.js":"38","C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardCommander.js":"39","C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardCommanderFront.js":"40","C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardCommanderBack.js":"41","C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardUnit.js":"42","C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardUnitBack.js":"43","C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardUnitFront.js":"44","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ItemShop\\itemShopFilterLogic.js":"45","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ItemShop\\itemShopSelectionLogic.js":"46","C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\LossCalculator.js":"47","C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\LossListElement.js":"48","C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\mockList.js":"49","C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\ListElementBttns.js":"50","C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\EquipmentListEntry.js":"51","C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\LossCalculator.js":"52","C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\mockList.js":"53","C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\LossListElement.js":"54","C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\EquipmentListEntry.js":"55","C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\ListElementBttns.js":"56","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\treeView.js":"57","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\Tree.js":"58","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\LeafNodeSelector.js":"59","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\LeafNode.js":"60","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\AlternativeArmyListSelection\\AlternativeArmyListSelector.js":"61","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\SubFactionList\\subList.js":"62","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\SubFactionList\\EquipmentList.js":"63","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\SubFactionList\\ItemCardButtons.js":"64","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\SubFactionList\\SubListStats.js":"65","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\styledTreeItem.js":"66","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\treeViewFunctions.js":"67","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\OptionButtons\\OptionButtons.js":"68"},{"size":631,"mtime":1619945168470,"results":"69","hashOfConfig":"70"},{"size":924,"mtime":1684793125517,"results":"71","hashOfConfig":"70"},{"size":362,"mtime":499162500000,"results":"72","hashOfConfig":"70"},{"size":636,"mtime":1620080038838,"results":"73","hashOfConfig":"74"},{"size":238,"mtime":1684354525506,"results":"75","hashOfConfig":"70"},{"size":1060,"mtime":1684354525504,"results":"76","hashOfConfig":"70"},{"size":7508,"mtime":1684860444147,"results":"77","hashOfConfig":"70"},{"size":2977,"mtime":1684848472594,"results":"78","hashOfConfig":"70"},{"size":18191,"mtime":1685024071959,"results":"79","hashOfConfig":"70"},{"size":74,"mtime":1636613720246,"results":"80","hashOfConfig":"74"},{"size":40,"mtime":1638729971868,"results":"81","hashOfConfig":"74"},{"size":178,"mtime":1639594073816,"results":"82","hashOfConfig":"74"},{"size":3006,"mtime":1684529310990,"results":"83","hashOfConfig":"70"},{"size":1490,"mtime":1684409038104,"results":"84","hashOfConfig":"70"},{"size":10500,"mtime":1682427130081,"results":"85","hashOfConfig":"70"},{"size":4192,"mtime":1682427130082,"results":"86","hashOfConfig":"70"},{"size":2288,"mtime":1682427130083,"results":"87","hashOfConfig":"70"},{"size":970,"mtime":1684936754817,"results":"88","hashOfConfig":"70"},{"size":837,"mtime":1663693746422,"results":"89","hashOfConfig":"70"},{"size":1562,"mtime":1683404398536,"results":"90","hashOfConfig":"70"},{"size":181,"mtime":1682427130099,"results":"91","hashOfConfig":"70"},{"size":3979,"mtime":1685024065892,"results":"92","hashOfConfig":"70"},{"size":3634,"mtime":1683409315179,"results":"93","hashOfConfig":"70"},{"size":3978,"mtime":1683411047143,"results":"94","hashOfConfig":"70"},{"size":4595,"mtime":1683411201345,"results":"95","hashOfConfig":"70"},{"size":3250,"mtime":1683976841642,"results":"96","hashOfConfig":"70"},{"size":8429,"mtime":1683410719399,"results":"97","hashOfConfig":"70"},{"size":3274,"mtime":1683404564622,"results":"98","hashOfConfig":"70"},{"size":2404,"mtime":1683549622010,"results":"99","hashOfConfig":"70"},{"size":3298,"mtime":1683404511165,"results":"100","hashOfConfig":"70"},{"size":2679,"mtime":1683544084913,"results":"101","hashOfConfig":"70"},{"size":4663,"mtime":1683316750232,"results":"102","hashOfConfig":"70"},{"size":4604,"mtime":1683404560675,"results":"103","hashOfConfig":"70"},{"size":8137,"mtime":1684941864134,"results":"104","hashOfConfig":"70"},{"size":1462,"mtime":1677707122833,"results":"105","hashOfConfig":"74"},{"size":1486,"mtime":1683406101676,"results":"106","hashOfConfig":"70"},{"size":144,"mtime":1683802369014,"results":"107","hashOfConfig":"70"},{"size":2102,"mtime":1684354525505,"results":"108","hashOfConfig":"70"},{"size":996,"mtime":1685022343867,"results":"109","hashOfConfig":"70"},{"size":5393,"mtime":1685023159572,"results":"110","hashOfConfig":"70"},{"size":2575,"mtime":1685023162219,"results":"111","hashOfConfig":"70"},{"size":966,"mtime":1685022708068,"results":"112","hashOfConfig":"70"},{"size":2615,"mtime":1683803940967,"results":"113","hashOfConfig":"70"},{"size":5434,"mtime":1685022631615,"results":"114","hashOfConfig":"70"},{"size":2447,"mtime":1684355281505,"results":"115","hashOfConfig":"70"},{"size":2195,"mtime":1684400426052,"results":"116","hashOfConfig":"70"},{"size":3202,"mtime":1684792457554,"results":"117","hashOfConfig":"70"},{"size":5669,"mtime":1684782386954,"results":"118","hashOfConfig":"70"},{"size":6069,"mtime":1684581515023,"results":"119","hashOfConfig":"70"},{"size":4571,"mtime":1684790754454,"results":"120","hashOfConfig":"70"},{"size":4094,"mtime":1684790768962,"results":"121","hashOfConfig":"70"},{"size":3222,"mtime":1684936879609,"results":"122","hashOfConfig":"70"},{"size":6069,"mtime":1684581515023,"results":"123","hashOfConfig":"70"},{"size":5704,"mtime":1684936890096,"results":"124","hashOfConfig":"70"},{"size":4094,"mtime":1684790768962,"results":"125","hashOfConfig":"70"},{"size":4571,"mtime":1684790754454,"results":"126","hashOfConfig":"70"},{"size":2446,"mtime":1684868271707,"results":"127","hashOfConfig":"70"},{"size":2242,"mtime":1684868208314,"results":"128","hashOfConfig":"70"},{"size":3268,"mtime":1684868130728,"results":"129","hashOfConfig":"70"},{"size":1972,"mtime":1684877417777,"results":"130","hashOfConfig":"70"},{"size":2004,"mtime":1684860977599,"results":"131","hashOfConfig":"70"},{"size":4681,"mtime":1684950731863,"results":"132","hashOfConfig":"70"},{"size":2482,"mtime":1684951834715,"results":"133","hashOfConfig":"70"},{"size":1463,"mtime":1684943520029,"results":"134","hashOfConfig":"70"},{"size":1953,"mtime":1685021759379,"results":"135","hashOfConfig":"70"},{"size":624,"mtime":1684868235377,"results":"136","hashOfConfig":"70"},{"size":2702,"mtime":1684868116958,"results":"137","hashOfConfig":"70"},{"size":3062,"mtime":1685050737845,"results":"138","hashOfConfig":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"10zjoly",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2b038z",{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"141"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"141"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"141"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\demonworld_ui\\src\\index.js",[],["284","285"],"C:\\Users\\User\\demonworld_ui\\src\\App.js",[],"C:\\Users\\User\\demonworld_ui\\src\\reportWebVitals.js",[],"C:\\Users\\User\\demonworld_ui\\src\\services\\factionService.js",[],"C:\\Users\\User\\demonworld_ui\\src\\constants\\unitTypes.js",[],"C:\\Users\\User\\demonworld_ui\\src\\constants\\factions.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\depencies\\factionTableFunctions.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\sharedFunctions.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ListGeneratorController.js",["286"],"// React\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// Axios\r\nimport axios from \"axios\";\r\n// Material UI\r\nimport { Drawer, Grid, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stack } from \"@mui/material\";\r\n// icons\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n// components and functions\r\nimport ArmyProvider from \"../../contexts/armyContext\";\r\nimport SelectionInput from \"../shared/selectionInput\";\r\nimport FactionTreeView from \"./ArmySelectorView/treeView\";\r\nimport ArmyListDisplay from \"./ArmyListView/armyListDisplay\";\r\nimport ItemShop from \"./ItemShop/ItemShop\";\r\nimport { ALLIES_MAPPING } from \"../../constants/allies\";\r\nimport { ALL_FACTIONS_ARRAY } from \"../../constants/factions\";\r\nimport { ruleValidation } from \"../gameLogic/useRuleValidation\";\r\nimport { isObjectEmtpy, unitOrCmdCard, uuidGenerator } from \"../shared/sharedFunctions\";\r\nimport AlternativeArmyListSelector from \"./ArmySelectorView/AlternativeArmyListSelection/AlternativeArmyListSelector\";\r\nimport OptionButtons from \"./OptionButtons/OptionButtons\";\r\n// constants\r\nimport { ARMIES_WITH_ALTERNATIVE_LISTS } from \"../../constants/factions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  displayBox: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"block\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  armySelectionBox: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingTop: \"2em\",\r\n      paddingLeft: \"4em\",\r\n    },\r\n\r\n    [theme.breakpoints.down(\"md\")]: {},\r\n  },\r\n  armyListBox: {\r\n    paddingTop: \"2em\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      left: \"30%\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      position: \"relative\",\r\n\r\n      left: \"10%\",\r\n    },\r\n  },\r\n  itemScreen: {},\r\n  UnitCardDisplay: {\r\n    position: \"fixed\",\r\n  },\r\n  BackBttn: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"fixed\",\r\n      top: \"0%\",\r\n      left: \"1%\",\r\n    },\r\n  },\r\n  BackBttnIcon: {\r\n    width: \"2em\",\r\n    height: \"2em\",\r\n  },\r\n}));\r\n\r\nconst ListGeneratorController = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // front and back side of the displayed unit cards are alligned vertically.\r\n  const COLUMN = \"column\";\r\n  const NONE = \"none\";\r\n\r\n  // intialize local states\r\n  const [fetchedFactions, setfetchedFactions] = useState([]);\r\n  const [fetchedItems, setfetchedItems] = useState([]);\r\n  const [selectedFactionName, setSelectedFactionName] = useState(\"\");\r\n  const [selectedFaction, setSelectedFaction] = useState([]);\r\n  const [allyName, setAllyName] = useState(\"\");\r\n  const [mappedAlly, setMappedAlly] = useState([]);\r\n  const [selectedUnits, setSelectedUnits] = useState([]);\r\n  // maximum point allowance\r\n  const [maxPointsAllowance, setMaxPointsAllowance] = useState(2000); //  eslint-disable-line no-unused-vars\r\n  // the current total point value of all selected units\r\n  const [totalPointValue, setTotalPointValue] = useState(0);\r\n  // sub factions of currrently selected army\r\n  const [distinctSubFactions, setDistinctSubFactions] = useState([]);\r\n  // sub factions of ally\r\n  const [distinctAllySubFactions, setDistinctAllySubFactions] = useState([]);\r\n  // validation\r\n  const [blockedUnits, setblockedUnits] = useState({\r\n    unitsBlockedbyRules: [],\r\n    subFactionBelowMinimum: [],\r\n  });\r\n  // alternative lists\r\n  const [armyHasAlternativeLists, setArmyHasAlternativeLists] = useState(false);\r\n  const [selectedAlternativeList, setSelectedAlternativeList] = useState(\"\");\r\n  // item shop\r\n  const [itemShopState, setItemShopState] = useState({\r\n    clickedUnit: {},\r\n    lastclickedUnit: {},\r\n    show: false,\r\n  });\r\n  const [unitSelectedForShop, setUnitSelectedForShop] = useState({});\r\n  const [allItems, setAllItems] = useState([]);\r\n  // unit card\r\n  const [showStatCard, setShowStatCard] = useState({\r\n    clickedUnit: {},\r\n    lastclickedUnit: {},\r\n    show: false,\r\n  });\r\n  // option buttons\r\n  const [showOptionButtons, setShowOptionButtons] = useState(true);\r\n\r\n  /**\r\n   * fetch units  from the Back End via REST.\r\n   */\r\n  useEffect(() => {\r\n    fetchFactionData();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fetchFactionData = async () => {\r\n    const result = await axios(`http://localhost:8080/factions`);\r\n    setfetchedFactions(result.data);\r\n  };\r\n\r\n  /**\r\n   * fetch items from the Back End via REST.\r\n   */\r\n  useEffect(() => {\r\n    fetchItemData();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fetchItemData = async () => {\r\n    const result = await axios(`http://localhost:8080/items`);\r\n    setfetchedItems(result.data);\r\n  };\r\n\r\n  /**\r\n   * Sets the selected faction and sends it to the treeview by filtering ALL units down to the faction's units.\r\n   */\r\n  useEffect(() => {\r\n    setSelectedFaction(fetchedFactions.filter((f) => f.faction.toLowerCase() === selectedFactionName.toLowerCase()));\r\n  }, [selectedFactionName]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * Find all distinct subfactions in the selected faction and create a set of them.\r\n   */\r\n  useEffect(() => {\r\n    setDistinctSubFactions(findDistinctSubfactions(selectedFaction));\r\n  }, [selectedFaction]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * Close the item shop when a new army is selected.\r\n   */\r\n  useEffect(() => {\r\n    closeItemShop();\r\n  }, [selectedFaction]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   *  Clear all selected units from the army list  when a new army is selected.\r\n   */\r\n  useEffect(() => {\r\n    clearList();\r\n  }, [selectedFaction]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // ALLY LOGIC\r\n  /**\r\n   * Find The allied faction, if it exists. If no ally exists, return \"none\" instead of null.\r\n   */\r\n  useEffect(() => {\r\n    const name = ALLIES_MAPPING[selectedFactionName] ? ALLIES_MAPPING[selectedFactionName] : NONE;\r\n    setAllyName(name);\r\n  }, [selectedFaction]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * set the ally name\r\n   */\r\n  useEffect(() => {\r\n    if (allyName) {\r\n      setMappedAlly(fetchedFactions.filter((f) => f.faction.toLowerCase() === allyName.toLowerCase()));\r\n    }\r\n  }, [allyName]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * Find the ally's distinct subfactions in the selected faction and create a set of them.\r\n   */\r\n  useEffect(() => {\r\n    if (allyName) {\r\n      const ally = fetchedFactions.filter((f) => f.faction.toLowerCase() === allyName.toLowerCase());\r\n      setDistinctAllySubFactions(findDistinctSubfactions(ally));\r\n    }\r\n  }, [allyName]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * If the army has an ally, then the allied faction's name is added as an additional subfaction. Otherwise the \"none\" value is ignored.\r\n   */\r\n  useEffect(() => {\r\n    if (allyName) {\r\n      let temp = distinctSubFactions;\r\n\r\n      if (allyName !== NONE) {\r\n        temp.push(allyName);\r\n      }\r\n      setDistinctSubFactions(temp);\r\n    }\r\n  }, [allyName]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setArmyHasAlternativeLists(ARMIES_WITH_ALTERNATIVE_LISTS.includes(selectedFactionName));\r\n  }, [selectedFactionName]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * Calculate total point value for army.\r\n   */\r\n  useEffect(() => {\r\n    let pointTotal = 0;\r\n    if (selectedUnits) {\r\n      selectedUnits.forEach((u) => (pointTotal += u.points));\r\n    }\r\n    setTotalPointValue(pointTotal);\r\n  }, [selectedUnits]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * Function returns all distinct subFactions of a selected faction.\r\n   * @param {[unitCard object]} units\r\n   * @returns [String] name of all distinct subfactions\r\n   */\r\n  const findDistinctSubfactions = (units) => {\r\n    let distinctSubFactions = [];\r\n\r\n    units.forEach((f) => {\r\n      if (!distinctSubFactions.includes(f.subFaction)) {\r\n        distinctSubFactions.push(f.subFaction);\r\n      }\r\n    });\r\n\r\n    return distinctSubFactions;\r\n  };\r\n\r\n  /**\r\n   * Adds the selected units to a central list of units selected by the user and adds 2 things:\r\n   * - a unique Id so the same unit can be selected more than once and all instances can be differentiated\r\n   * - equipment slots so items can be added\r\n   * @param {unitCard object} unit\r\n   */\r\n  const selectUnit = (unit) => {\r\n    setSelectedUnits([...selectedUnits, addEquipmentSlotsToUnit(addUniqueIdToUnit(unit))]);\r\n  };\r\n\r\n  /**\r\n   * Validate the current army list everytime a unit is added. Validation works through a validator object.\r\n   */\r\n  useEffect(() => {\r\n    if (selectedFactionName) {\r\n      let validator = ruleValidation(selectedFactionName);\r\n      let result = validator.testSubFactionRules(selectedFaction, selectedUnits, maxPointsAllowance);\r\n\r\n      collectAllBlockedUnits(result);\r\n    }\r\n  }, [selectedUnits]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * add all invalid units to the block list.\r\n   * @param {*} validationResult\r\n   */\r\n  const collectAllBlockedUnits = (validationResult) => {\r\n    setblockedUnits({\r\n      ...blockedUnits,\r\n      unitsBlockedbyRules: validationResult.unitsBlockedbyRules,\r\n      subFactionBelowMinimum: validationResult.subFactionBelowMinimum,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Everytime the unit selections changes, recalculate which items are currently selected and store it in the central item list.\r\n   */\r\n  useEffect(() => {\r\n    let temp = allItems;\r\n    let allCurrentItems = [];\r\n\r\n    // current items in the army\r\n    selectedUnits.forEach((unit) => {\r\n      allCurrentItems = [...allCurrentItems, unit.equipment];\r\n    });\r\n\r\n    // compare\r\n    temp.forEach((item) => {\r\n      if (!allCurrentItems.includes(item)) {\r\n        const position = temp.indexOf(item);\r\n        temp.splice(position, 1);\r\n      }\r\n    });\r\n\r\n    setAllItems(temp);\r\n  }, [selectedUnits]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  /**\r\n   * Functions adds a UUID as unique id so the user can select the\r\n   * same unit twice in a row. Without it, the useEffect does not fire, since the\r\n   * unit objects are identical!\r\n   *\r\n   * @param {} unit\r\n   * @returns {} unit object with a random ID\r\n   */\r\n  const addUniqueIdToUnit = (unit) => {\r\n    const randomID = uuidGenerator();\r\n    return { ...unit, uniqueID: randomID };\r\n  };\r\n\r\n  const addEquipmentSlotsToUnit = (unit) => {\r\n    const maxItemNumber = calculateMaxNumberMagicItems(unit);\r\n\r\n    return {\r\n      ...unit,\r\n      equipment: [],\r\n      equipmentTypes: {\r\n        poison: false,\r\n        warpaint: false,\r\n        maxMagic: maxItemNumber,\r\n      },\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Function calculates how many magical items the unit is allowed to have. +1 per special element.\r\n   * @param {unit card} unit\r\n   */\r\n  const calculateMaxNumberMagicItems = (unit) => {\r\n    let total = 1;\r\n\r\n    if (unit.standardBearer) {\r\n      ++total;\r\n    }\r\n    if (unit.musician) {\r\n      ++total;\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n  /**\r\n   * removes a unit from the current list.\r\n   * @param {*} identifier unit.name + unique hash value\r\n   */\r\n  const removeUnit = (identifier) => {\r\n    let filtered = selectedUnits.filter((u) => u.name + u.uniqueID !== identifier);\r\n    setSelectedUnits(filtered);\r\n  };\r\n\r\n  const removeItem = (identifier, position) => {\r\n    let temp = [...selectedUnits];\r\n\r\n    for (let i = 0; i < temp.length; i++) {\r\n      if (temp[i].name + temp[i].uniqueID === identifier) {\r\n        temp[i].equipment.splice(position, 1);\r\n      }\r\n    }\r\n\r\n    setSelectedUnits(temp);\r\n  };\r\n\r\n  /**\r\n   * Function deletes the entire army list and closes the stat card display and item shop, if open.\r\n   */\r\n  const clearList = () => {\r\n    setSelectedUnits([]);\r\n    closeCardDisplay();\r\n    closeItemShop();\r\n  };\r\n\r\n  const toggleBetweenItemShops = (u) => {\r\n    closeCardDisplay();\r\n\r\n    // first click on page (no card displayed)\r\n    if (itemShopState.clickedUnit === undefined) {\r\n      setItemShopState({ clickedUnit: u, lastclickedUnit: u, show: true });\r\n    }\r\n    // click on same unit again to toggle the card view on\r\n    else if (itemShopState.lastclickedUnit.unitName === u.unitName && itemShopState.show === true)\r\n      setItemShopState({ clickedUnit: u, lastclickedUnit: u, show: false });\r\n    // click on same unit again to toggle the card view off\r\n    else if (itemShopState.lastclickedUnit.unitName === u.unitName && itemShopState.show === false)\r\n      setItemShopState({ clickedUnit: u, lastclickedUnit: u, show: true });\r\n    // click on a different unit to show a different card\r\n    else if (itemShopState.lastclickedUnit.unitName !== u.unitName) {\r\n      setItemShopState({ clickedUnit: u, lastclickedUnit: u, show: true });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * function toggles the unit card view on and off as well as switches between card views for different units. TO do this, the card view is not toggled by a booelan flag, but an object that stores the previouslyx clickedUnit\r\n   * @param {unitCard} u\r\n   */\r\n  const toggleBetweenCards = (u) => {\r\n    closeItemShop();\r\n\r\n    // first click on page (no card displayed)\r\n    if (showStatCard.clickedUnit === undefined) {\r\n      setShowStatCard({ clickedUnit: u, lastclickedUnit: u, show: true });\r\n    }\r\n    // click on same unit again to toggle the card view on\r\n    else if (showStatCard.lastclickedUnit.unitName === u.unitName && showStatCard.show === true) {\r\n      setShowStatCard({ clickedUnit: u, lastclickedUnit: u, show: false });\r\n    }\r\n    // click on same unit again to toggle the card view off\r\n    else if (showStatCard.lastclickedUnit.unitName === u.unitName && showStatCard.show === false) {\r\n      setShowStatCard({ clickedUnit: u, lastclickedUnit: u, show: true });\r\n    }\r\n    // click on a different unit to show a different card\r\n    else if (showStatCard.lastclickedUnit.unitName !== u.unitName) {\r\n      setShowStatCard({ clickedUnit: u, lastclickedUnit: u, show: true });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * in order to work, the state setter needs a unit. Since the card view is toggled off, the first unit in the list is used.\r\n   */\r\n  const closeCardDisplay = () => {\r\n    setShowStatCard({ clickedUnit: selectedUnits[0], lastclickedUnit: selectedUnits[0], show: false });\r\n  };\r\n\r\n  const closeItemShop = () => {\r\n    setItemShopState({ clickedUnit: selectedUnits[0], lastclickedUnit: selectedUnits[0], show: false });\r\n  };\r\n\r\n  /**\r\n   * Function calls history objects to take user back to main menu.\r\n   */\r\n  const backToMainmenu = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return fetchedFactions && fetchedItems ? (\r\n    <ArmyProvider\r\n      value={{\r\n        // ARMY\r\n        selectedFactionName: selectedFactionName,\r\n        subfactions: distinctSubFactions,\r\n        units: selectedFaction,\r\n        armyHasAlternativeLists: armyHasAlternativeLists,\r\n        // ALLY\r\n        allyName: allyName,\r\n        allySubFactions: distinctAllySubFactions,\r\n        alliedUnits: mappedAlly,\r\n        // NET POINT VALUES\r\n        maxPointsValue: maxPointsAllowance,\r\n        totalPointValue: totalPointValue,\r\n        addedUnits: selectedUnits,\r\n        setMaxPointsAllowance: setMaxPointsAllowance,\r\n        // BUTTON FUNCTIONS\r\n        selectUnit: selectUnit,\r\n        removeUnit: removeUnit,\r\n        removeItem: removeItem,\r\n        clearList: clearList,\r\n        // BLOCKED UNITS\r\n        blockedUnits: blockedUnits,\r\n        // ITEMSHOP\r\n        fetchedItems: fetchedItems,\r\n        unitSelectedForShop: unitSelectedForShop,\r\n        allItems: allItems,\r\n        closeItemShop: closeItemShop,\r\n        toggleBetweenItemShops: toggleBetweenItemShops,\r\n        setUnitSelectedForShop: setUnitSelectedForShop,\r\n        setAllItems: setAllItems,\r\n        //  SELECTED UNITS\r\n        selectedUnits: selectedUnits,\r\n        setSelectedUnits: setSelectedUnits,\r\n        // STAT CARD DISPLAY\r\n        showStatCard: showStatCard,\r\n        setShowStatCard: setShowStatCard,\r\n        toggleBetweenCards: toggleBetweenCards,\r\n        // ALTERNATIVE LISTS\r\n        selectedAlternativeList: selectedAlternativeList,\r\n        setSelectedAlternativeList: setSelectedAlternativeList,\r\n      }}\r\n    >\r\n      <Grid container className={classes.displayBox}>\r\n        <IconButton\r\n          className={classes.BackBttn}\r\n          onClick={() => {\r\n            backToMainmenu();\r\n          }}\r\n        >\r\n          <ChevronLeftIcon className={classes.BackBttnIcon} />\r\n        </IconButton>\r\n\r\n        {/* ARMY SELECTION */}\r\n        <Stack direction={\"column\"} className={classes.armySelectionBox}>\r\n          <SelectionInput\r\n            className={classes.selector}\r\n            filterFunction={setSelectedFactionName}\r\n            isArmySelector={true}\r\n            options={ALL_FACTIONS_ARRAY}\r\n            label=\"Wähle Eine Fraktion\"\r\n          />\r\n          {armyHasAlternativeLists ? <AlternativeArmyListSelector /> : null}\r\n\r\n          <FactionTreeView className={classes.selector} />\r\n        </Stack>\r\n        {/* ARMYLIST */}\r\n        <Grid item container direction=\"column\" justify=\"flex-end\" xs={3} className={classes.armyListBox}>\r\n          <ArmyListDisplay setTotalPointValue={setTotalPointValue} />\r\n        </Grid>\r\n        {/* OPTION BUTTON GROUP */}\r\n        <Drawer anchor={\"right\"} variant=\"persistent\" open={showOptionButtons} className={classes.optionButtons}>\r\n          <OptionButtons />\r\n        </Drawer>\r\n        {/* ITEMSHOP */}\r\n        <Drawer anchor={\"right\"} variant=\"persistent\" open={itemShopState.show} className={classes.itemScreen}>\r\n          <ItemShop />\r\n        </Drawer>\r\n        {/* UNITCARD */}\r\n        <Drawer anchor={\"right\"} variant=\"persistent\" open={showStatCard.show} className={classes.UnitCardDisplay}>\r\n          {!isObjectEmtpy(showStatCard.clickedUnit) ? unitOrCmdCard(showStatCard.clickedUnit, COLUMN) : <p></p>}\r\n        </Drawer>\r\n      </Grid>\r\n    </ArmyProvider>\r\n  ) : null;\r\n};\r\n\r\nexport default ListGeneratorController;\r\n","C:\\Users\\User\\demonworld_ui\\src\\constants\\operators.js",[],["287","288"],"C:\\Users\\User\\demonworld_ui\\src\\constants\\numericConstants.js",[],["289","290"],"C:\\Users\\User\\demonworld_ui\\src\\theme.js",[],["291","292"],"C:\\Users\\User\\demonworld_ui\\src\\components\\landingPage\\landingPage.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\selectionInput.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\factionTable.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\factionTableRow.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\toggleColumnsMenu.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\detailedCardView.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\compendiums\\factionTable\\components\\factionTableHeader.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\useRuleValidation.js",[],"C:\\Users\\User\\demonworld_ui\\src\\contexts\\armyContext.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\armyListDisplay.js",["293"],"// React\r\nimport React, { useState, useContext, Fragment } from \"react\";\r\n// Material UI\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, TextField, InputAdornment, Button } from \"@material-ui/core\";\r\n// components and functions\r\nimport { ArmyContext } from \"../../../contexts/armyContext\";\r\nimport { uuidGenerator } from \"../../shared/sharedFunctions\";\r\nimport { ALLIES_MAPPING } from \"../../../constants/allies\";\r\nimport SubList from \"./SubFactionList/subList\";\r\n\r\n// TODO: remove unneeded styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  HeaderBox: {\r\n    fontFamily: \"notMaryKate\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    width: \"60%\",\r\n    borderBottom: \"solid 4px black\",\r\n    marginBottom: \"1em\",\r\n  },\r\n\r\n  total: {\r\n    fontFamily: \"notMaryKate\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    paddingRight: \"5px\",\r\n    position: \"relative\",\r\n    top: 3,\r\n  },\r\n  clearIcon: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n  },\r\n  armyName: {\r\n    fontSize: \"30px\",\r\n    fontFamily: \"notMaryKate\",\r\n    \"& .MuiTextField\": {\r\n      fontFamily: \"notMaryKate\",\r\n    },\r\n  },\r\n\r\n  bottom: { bottom: \"100px\" },\r\n  withinLimit: { color: \"black\" },\r\n  exceeded: { color: \"red\" },\r\n}));\r\n\r\nconst ArmyListDisplay = () => {\r\n  const classes = useStyles();\r\n  const contextArmy = useContext(ArmyContext);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  /**\r\n   * Filters the selected units by subFaction. If allied units have been selected, then their subFaction name is replaced with their faction name.\r\n   * @param {[unitCard Objects]} allUnits\r\n   * @param {String} subFaction\r\n   * @returns\r\n   */\r\n  const filterUnitsForSubFaction = (allUnits, subFaction) => {\r\n    allUnits.forEach((u) => (u.faction === ALLIES_MAPPING[contextArmy.selectedFactionName] ? (u.subFaction = u.faction) : null));\r\n\r\n    return allUnits.filter((u) => u.subFaction === subFaction);\r\n  };\r\n\r\n  const changeMaximumPointValue = (event) => {\r\n    contextArmy.setMaxPointsAllowance(event.target.value);\r\n\r\n    // validate user input\r\n    let isValid = new RegExp(/^[0-9]*$/).test(event.target.value);\r\n    isValid ? setErrorMessage(\"\") : setErrorMessage(\"Bitte nur Zahlen eingeben.\");\r\n  };\r\n\r\n  /**\r\n   * This creates the centre of the UI: the actual army list consisting of the selected units and the display of the maximum * army points.\r\n   */\r\n  return contextArmy ? (\r\n    <Fragment>\r\n      {/* <Grid item container justify=\"flex-end\"> */}\r\n\r\n      <List>\r\n        {contextArmy.subfactions.map((subFaction) => (\r\n          <ListItem key={uuidGenerator()}>\r\n            <Grid container direction={\"column\"}>\r\n              <Typography className={classes.HeaderBox}>{subFaction}</Typography>\r\n              {/* DISPLAY UNITS, PONT COST, PERCENTAGES FOR ONE SUBFACTION */}\r\n              <SubList subFactionUnits={filterUnitsForSubFaction(contextArmy.addedUnits, subFaction)} subFactionName={subFaction} />\r\n            </Grid>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      {/* TOTAL SPENT POINTS */}\r\n      <Typography className={classes.total}>Gesamtpunktzahl: {contextArmy.totalPointValue} / </Typography>\r\n      {/* TOTAL POINT ALLOWANCE */}\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        autoComplete=\"off\"\r\n        value={contextArmy.maxPointsValue}\r\n        InputProps={{\r\n          style: {\r\n            fontFamily: \"notMaryKate\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n            pading: \"50px\",\r\n            width: \"130px\",\r\n          },\r\n          endAdornment: <InputAdornment position=\"end\">Punkte</InputAdornment>,\r\n        }}\r\n        onChange={changeMaximumPointValue}\r\n        required\r\n        error={Boolean(errorMessage)}\r\n        helperText={errorMessage}\r\n        variant=\"standard\"\r\n      />\r\n    </Fragment>\r\n  ) : null;\r\n};\r\n\r\nexport default ArmyListDisplay;\r\n","C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\darkElves.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\dwarfs.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\empireRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\orkRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\highElfsRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\thainRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\ishtakRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\norwingerRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\goblinRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\globalRules\\globalRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\factionValidationRules\\undeadRules.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ItemShop\\ItemShop.js",[],"C:\\Users\\User\\demonworld_ui\\src\\services\\itemService.js",[],["294","295"],"C:\\Users\\User\\demonworld_ui\\src\\components\\gameLogic\\globalRules\\ruleObjectProvider.js",[],"C:\\Users\\User\\demonworld_ui\\src\\constants\\allies.js",[],"C:\\Users\\User\\demonworld_ui\\src\\constants\\itemShopConstants.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardCommander.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardCommanderFront.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardCommanderBack.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardUnit.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardUnitBack.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\shared\\statCards\\statCardUnitFront.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ItemShop\\itemShopFilterLogic.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ItemShop\\itemShopSelectionLogic.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\LossCalculator.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\LossListElement.js",[],["296","297"],"C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\mockList.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\ListElementBttns.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\lossCalculator\\EquipmentListEntry.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\LossCalculator.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\mockList.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\LossListElement.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\EquipmentListEntry.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\LossCalculator\\ListElementBttns.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\treeView.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\Tree.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\LeafNodeSelector.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\LeafNode.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\AlternativeArmyListSelection\\AlternativeArmyListSelector.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\SubFactionList\\subList.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\SubFactionList\\EquipmentList.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\SubFactionList\\ItemCardButtons.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmyListView\\SubFactionList\\SubListStats.js",["298"],"// React\r\nimport React, { useContext } from \"react\";\r\n// Material UI\r\nimport { ListItemText, makeStyles, List } from \"@material-ui/core\";\r\nimport { Stack } from \"@mui/material\";\r\n// components and functions\r\nimport { ArmyContext } from \"../../../../contexts/armyContext\";\r\nimport { uuidGenerator } from \"../../../shared/sharedFunctions\";\r\n// clsx\r\n\r\nconst useStyles = makeStyles({\r\n  listElement: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  textBox: {\r\n    gap: \"1em\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  font: {\r\n    fontFamily: \"NotMaryKate\",\r\n  },\r\n});\r\n\r\nconst SubListStats = (props) => {\r\n  const classes = useStyles();\r\n  const contextArmy = useContext(ArmyContext);\r\n\r\n  const calculateCurrentPercentage = () => {\r\n    return Math.round((props.subFactionTotal / contextArmy.maxPointsValue) * 100);\r\n  };\r\n\r\n  const displayPoints = () => {\r\n    return props.subFactionTotal === 0 ? null : `${props.subFactionTotal} Punkte`;\r\n  };\r\n\r\n  const displayPercents = () => {\r\n    return calculateCurrentPercentage() === 0 ? null : `Prozent ${calculateCurrentPercentage()} %`;\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      <ListItemText className={classes.listElement} key={uuidGenerator()} primary={<span className={classes.font}>Gesamt</span>} />\r\n      <ListItemText\r\n        className={classes.listElement}\r\n        key={uuidGenerator()}\r\n        primary={\r\n          <span className={classes.textBox}>\r\n            <span className={classes.font}>{displayPoints()}</span>\r\n            <span className={classes.font}> {displayPercents()}</span>\r\n          </span>\r\n        }\r\n        secondary={\r\n          <span className={classes.textBox}>\r\n            <span className={classes.font}>{`Minimum: ${props.percentages.min} %`}</span>\r\n            <span className={classes.font}>{`Maximum ${props.percentages.max} %`}</span>\r\n          </span>\r\n        }\r\n      />\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default SubListStats;\r\n","C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\styledTreeItem.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\ArmySelectorView\\treeViewFunctions.js",[],"C:\\Users\\User\\demonworld_ui\\src\\components\\ListGenerator\\OptionButtons\\OptionButtons.js",[],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":121,"column":29,"nodeType":"305","messageId":"306","endLine":121,"endColumn":49},{"ruleId":"299","replacedBy":"307"},{"ruleId":"301","replacedBy":"308"},{"ruleId":"299","replacedBy":"309"},{"ruleId":"301","replacedBy":"310"},{"ruleId":"299","replacedBy":"311"},{"ruleId":"301","replacedBy":"312"},{"ruleId":"303","severity":1,"message":"313","line":7,"column":55,"nodeType":"305","messageId":"306","endLine":7,"endColumn":61},{"ruleId":"299","replacedBy":"314"},{"ruleId":"301","replacedBy":"315"},{"ruleId":"299","replacedBy":"316"},{"ruleId":"301","replacedBy":"317"},{"ruleId":"303","severity":1,"message":"318","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":15},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],"no-unused-vars","'setShowOptionButtons' is assigned a value but never used.","Identifier","unusedVar",["319"],["320"],["319"],["320"],["319"],["320"],"'Button' is defined but never used.",["319"],["320"],["319"],["320"],"'Stack' is defined but never used.","no-global-assign","no-unsafe-negation"]